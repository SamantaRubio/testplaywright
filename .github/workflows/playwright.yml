name: Playwright Automation

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-browsers-${{ runner.os }}-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers (only on cache miss)
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium firefox webkit
          # Si realmente te faltan libs de sistema para WebKit:
          # sudo npx playwright install-deps webkit

      - name: Run smoke tests
        env:
          CI: true
        run: npx playwright test tests/smoke --reporter=line

      - name: Upload HTML report (smoke)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-smoke
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload JSON summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.job }}
          path: results.json
          if-no-files-found: ignore

  performance:
    if: github.event_name == 'pull_request'
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-browsers-${{ runner.os }}-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers (only on cache miss)
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium firefox webkit
          # sudo npx playwright install-deps webkit

      - name: Run performance tests
        env:
          CI: true
        run: npx playwright test tests/performance --reporter=line

      - name: Upload HTML report (performance)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-performance
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload JSON summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.job }}
          path: results.json
          if-no-files-found: ignore

  regression:
    if: github.event_name == 'pull_request'
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-browsers-${{ runner.os }}-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers (only on cache miss)
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium firefox webkit
          # sudo npx playwright install-deps webkit

      - name: Run regression tests
        env:
          CI: true
        run: npx playwright test tests/regression --reporter=line

      - name: Upload HTML report (regression)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-regression
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload JSON summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.job }}
          path: results.json
          if-no-files-found: ignore

  e2e:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: smoke
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL: ${{ secrets.BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-browsers-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            pw-browsers-${{ runner.os }}-

      - name: Install deps
        run: npm ci --no-audit --no-fund

      - name: Install Playwright browsers (only on cache miss)
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install chromium firefox webkit
          # sudo npx playwright install-deps webkit

      - name: Run e2e tests
        env:
          CI: true
        run: npx playwright test tests/e2e --reporter=line

      - name: Upload HTML report (e2e)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-e2e
          path: playwright-report
          if-no-files-found: ignore

      - name: Upload JSON summary
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.job }}
          path: results.json
          if-no-files-found: ignore

  # Tus jobs notify-slack-pr / notify-slack-main quedan igual
  # (no los toco para no romper el consumo de artifacts que ya tienes).
