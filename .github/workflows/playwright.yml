name: Playwright Automation

on:
  pull_request:
    branches: [main]         # PRs -> solo smoke (rápido)
  push:
    branches: [main]         # Push a main -> todo el pipeline

permissions:
  contents: read

concurrency:
  group: playwright-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install deps
        run: npm ci

      - name: Install Playwright (browsers & deps)
        uses: microsoft/playwright-github-action@v1

      - name: Create .env from secrets
        run: |
          {
            echo "BASE_URL=${{ secrets.BASE_URL }}"
            # Agrega aquí más secretos si los usas
          } > .env

      - name: Run smoke tests (Chromium only)
        env:
          CI: true
        run: npx playwright test tests/smoke --project=chromium --reporter=html,line

      - name: Upload HTML report (smoke, on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-smoke
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7

  regression:
    needs: smoke
    if: github.event_name == 'push'   # solo en push a main
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install deps
        run: npm ci

      - name: Install Playwright
        uses: microsoft/playwright-github-action@v1

      - name: Create .env
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" > .env

      - name: Run regression ${{ matrix.project }}
        env:
          CI: true
        run: npx playwright test tests/regression --project=${{ matrix.project }} --reporter=html,junit,line --output=test-results/${{ matrix.project }}

      - name: Upload reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: regression-${{ matrix.project }}-artifacts
          path: |
            playwright-report
            test-results/${{ matrix.project }}
          if-no-files-found: ignore
          retention-days: 7

  performance:
    needs: smoke
    if: github.event_name == 'push'   # solo en push a main
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install deps
        run: npm ci
      - name: Install Playwright
        uses: microsoft/playwright-github-action@v1
      - name: Create .env
        run: echo "BASE_URL=${{ secrets.BASE_URL }}" > .env
      - name: Run performance tests (Chromium)
        env:
          CI: true
        run: npx playwright test tests/performance --project=chromium --reporter=html,line
      - name: Upload report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-performance
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7

  e2e:
    needs: [regression, performance]
    if: github.event_name == 'push'   # solo en push a main
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install deps
        run: npm ci
      - name: Install Playwright
        uses: microsoft/playwright-github-action@v1
      - name: Create .env
        run: echo "BASE_URL=${{ secrets.BASE_URL }}" > .env
      - name: Run E2E ${{ matrix.project }}
        env:
          CI: true
        run: npx playwright test tests/e2e --project=${{ matrix.project }} --reporter=html,junit,line --output=test-results/${{ matrix.project }}
      - name: Upload report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-e2e-${{ matrix.project }}
          path: |
            playwright-report
            test-results/${{ matrix.project }}
          if-no-files-found: ignore
          retention-days: 7
